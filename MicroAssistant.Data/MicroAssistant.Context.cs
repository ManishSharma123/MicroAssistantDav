//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MicroAssistant.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MicroAssistantEntities : DbContext
    {
        public MicroAssistantEntities()
            : base("name=MicroAssistantEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<LoginHistory> LoginHistories { get; set; }
        public virtual DbSet<RegisteredUser> RegisteredUsers { get; set; }
        public virtual DbSet<UserProfile> UserProfiles { get; set; }
        public virtual DbSet<webpages_Membership> webpages_Membership { get; set; }
        public virtual DbSet<webpages_OAuthMembership> webpages_OAuthMembership { get; set; }
        public virtual DbSet<webpages_Roles> webpages_Roles { get; set; }
        public virtual DbSet<webpages_UsersInRoles> webpages_UsersInRoles { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<MicroAssistant_Services> MicroAssistant_Services { get; set; }
        public virtual DbSet<Job> Jobs { get; set; }
    
        public virtual int SP_Login_Histories(string username, string iPAddress, Nullable<System.DateTime> loginDateTime)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var loginDateTimeParameter = loginDateTime.HasValue ?
                new ObjectParameter("LoginDateTime", loginDateTime) :
                new ObjectParameter("LoginDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Login_Histories", usernameParameter, iPAddressParameter, loginDateTimeParameter);
        }
    
        public virtual ObjectResult<SP_Resitered_User_Detail_Result> SP_Resitered_User_Detail(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Resitered_User_Detail_Result>("SP_Resitered_User_Detail", userIdParameter);
        }
    
        public virtual int SP_Resitered_Users_Edition(Nullable<long> userID, string userName, string usrPassword, string usrEmail, string usrImage, string website)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var usrPasswordParameter = usrPassword != null ?
                new ObjectParameter("usrPassword", usrPassword) :
                new ObjectParameter("usrPassword", typeof(string));
    
            var usrEmailParameter = usrEmail != null ?
                new ObjectParameter("usrEmail", usrEmail) :
                new ObjectParameter("usrEmail", typeof(string));
    
            var usrImageParameter = usrImage != null ?
                new ObjectParameter("usrImage", usrImage) :
                new ObjectParameter("usrImage", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Resitered_Users_Edition", userIDParameter, userNameParameter, usrPasswordParameter, usrEmailParameter, usrImageParameter, websiteParameter);
        }
    
        public virtual int SP_Registered_User_Activation(string email, string strVal)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var strValParameter = strVal != null ?
                new ObjectParameter("strVal", strVal) :
                new ObjectParameter("strVal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Registered_User_Activation", emailParameter, strValParameter);
        }
    
        public virtual int SP_Job_Post(Nullable<long> postId, string title, string description, string blurbText, byte[] photo, string video, Nullable<decimal> price, string phone, string city, Nullable<long> categoryId, Nullable<long> stateId, Nullable<int> isbestOffer, Nullable<int> isFree, Nullable<System.DateTime> dateCreated, Nullable<System.DateTime> dateUpdated, string createdBy, string remark)
        {
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("postId", postId) :
                new ObjectParameter("postId", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var blurbTextParameter = blurbText != null ?
                new ObjectParameter("blurbText", blurbText) :
                new ObjectParameter("blurbText", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(byte[]));
    
            var videoParameter = video != null ?
                new ObjectParameter("Video", video) :
                new ObjectParameter("Video", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(long));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(long));
    
            var isbestOfferParameter = isbestOffer.HasValue ?
                new ObjectParameter("IsbestOffer", isbestOffer) :
                new ObjectParameter("IsbestOffer", typeof(int));
    
            var isFreeParameter = isFree.HasValue ?
                new ObjectParameter("IsFree", isFree) :
                new ObjectParameter("IsFree", typeof(int));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var dateUpdatedParameter = dateUpdated.HasValue ?
                new ObjectParameter("DateUpdated", dateUpdated) :
                new ObjectParameter("DateUpdated", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Job_Post", postIdParameter, titleParameter, descriptionParameter, blurbTextParameter, photoParameter, videoParameter, priceParameter, phoneParameter, cityParameter, categoryIdParameter, stateIdParameter, isbestOfferParameter, isFreeParameter, dateCreatedParameter, dateUpdatedParameter, createdByParameter, remarkParameter);
        }
    
        public virtual int SP_MicroAssistant_Services_Post(Nullable<long> id, string title, string description, string blurbText, byte[] photo, Nullable<long> categoryId, string city, Nullable<long> stateId, Nullable<long> countryId, string createdBy, string remark)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var blurbTextParameter = blurbText != null ?
                new ObjectParameter("BlurbText", blurbText) :
                new ObjectParameter("BlurbText", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(byte[]));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(long));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(long));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MicroAssistant_Services_Post", idParameter, titleParameter, descriptionParameter, blurbTextParameter, photoParameter, categoryIdParameter, cityParameter, stateIdParameter, countryIdParameter, createdByParameter, remarkParameter);
        }
    }
}
